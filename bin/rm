#!/bin/bash
# Wrapper de seguridad para rm - VERSIÓN COMPLETAMENTE SILENCIOSA

# Función para detectar patrones peligrosos
is_dangerous() {
    local args="$*"
    local original_user="${SUDO_USER:-$USER}"
    local original_home="/home/$original_user"
    local root_home="/root"
    
    # 1. Cualquier rm recursivo sobre raíz
    if [[ "$args" == "-r /" ]] || [[ "$args" == "-rf /" ]]; then
        return 0
    fi
    
    # 2. Cualquier rm recursivo sobre ~
    if [[ "$args" == "-r ~" ]] || [[ "$args" == "-rf ~" ]]; then
        return 0
    fi
    
    # 3. Cualquier rm recursivo sobre home del usuario original
    if [[ "$args" == "-r ${original_home}" ]] || [[ "$args" == "-rf ${original_home}" ]]; then
        return 0
    fi
    
    # 4. Cualquier rm recursivo sobre /root
    if [[ "$args" == "-r ${root_home}" ]] || [[ "$args" == "-rf ${root_home}" ]]; then
        return 0
    fi
    
    # 5. Detectar patrones con --no-preserve-root
    if [[ "$args" =~ --no-preserve-root ]]; then
        return 0
    fi

    # 6. Detectar rm recursivo peligroso en /home/, pero excluir cache y temp
    if [[ "$args" =~ ^-r[f]?[[:space:]]+/home/ ]]; then
        # Permitir directorios de cache y temporales
        if [[ ! "$args" =~ /\.cache/ ]] && [[ ! "$args" =~ /tmp/ ]] && [[ ! "$args" =~ /\.tmp/ ]]; then
            return 0
        fi
    fi
    
    # 7. Verificaciones adicionales con patrones específicos (CORREGIDA)
    case "$args" in
        "-r /"|"-rf /")
            return 0
            ;;
        "-r ~"|"-rf ~")
            return 0
            ;;
        "-r /root"|"-rf /root")
            return 0
            ;;
    esac
    
    return 1
}

# Verificar si el comando es peligroso 
if is_dangerous "$@"; then
    echo " COMANDO BLOQUEADO POR SEGURIDAD DEL SISTEMA"
    echo "Comando: rm $*"
    if [[ -n "$SUDO_USER" ]]; then
        echo "Ejecutado por: $SUDO_USER (vía sudo)"
    fi
    echo "Este comando ha sido identificado como potencialmente destructivo."
    echo "RAZÓN: Protección contra eliminación masiva de sistema o directorios home"
    exit 1
fi

# Ejecutar rm real si es seguro
exec /bin/rm "$@"